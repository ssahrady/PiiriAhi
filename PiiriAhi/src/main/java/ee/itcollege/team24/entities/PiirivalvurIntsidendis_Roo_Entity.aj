// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.team24.entities;

import ee.itcollege.team24.entities.PiirivalvurIntsidendis;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PiirivalvurIntsidendis_Roo_Entity {
    
    @PersistenceContext
    transient EntityManager PiirivalvurIntsidendis.entityManager;
    
    @Version
    @Column(name = "version")
    private Integer PiirivalvurIntsidendis.version;
    
    public Integer PiirivalvurIntsidendis.getVersion() {
        return this.version;
    }
    
    public void PiirivalvurIntsidendis.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void PiirivalvurIntsidendis.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void PiirivalvurIntsidendis.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            PiirivalvurIntsidendis attached = PiirivalvurIntsidendis.findPiirivalvurIntsidendis(this.piirivalvur_intsidendis_ID);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void PiirivalvurIntsidendis.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void PiirivalvurIntsidendis.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public PiirivalvurIntsidendis PiirivalvurIntsidendis.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        PiirivalvurIntsidendis merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager PiirivalvurIntsidendis.entityManager() {
        EntityManager em = new PiirivalvurIntsidendis().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long PiirivalvurIntsidendis.countPiirivalvurIntsidendises() {
        return entityManager().createQuery("SELECT COUNT(o) FROM PiirivalvurIntsidendis o", Long.class).getSingleResult();
    }
    
    public static List<PiirivalvurIntsidendis> PiirivalvurIntsidendis.findAllPiirivalvurIntsidendises() {
        return entityManager().createQuery("SELECT o FROM PiirivalvurIntsidendis o", PiirivalvurIntsidendis.class).getResultList();
    }
    
    public static PiirivalvurIntsidendis PiirivalvurIntsidendis.findPiirivalvurIntsidendis(Long piirivalvur_intsidendis_ID) {
        if (piirivalvur_intsidendis_ID == null) return null;
        return entityManager().find(PiirivalvurIntsidendis.class, piirivalvur_intsidendis_ID);
    }
    
    public static List<PiirivalvurIntsidendis> PiirivalvurIntsidendis.findPiirivalvurIntsidendisEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM PiirivalvurIntsidendis o", PiirivalvurIntsidendis.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
